Let's study more about computer storage devices, how data are stored on those devices.
As we call it, it is all because of computers, or in fact, my composer, they work on transistors.
Transistors only have open or off, open or close, that means you can only have two values.
One and zero.
But we need to organize ourselves very well, with ones and zero.
Because we say, any computer chips, as millions and millions of transistors, within one chip,
then each one of them shows one of, and so on and so forth.
In normally, we include h of them as one unit.
There's eight of them, so each of them contain information about switches on or off, open, close.
And because unless we organize into another level of representation, we just not manage with beaming some bits.
So, that is to enable us to organize information better.
Why h of them? Because we find it, computer scientists find it with h of them.
That means we can have 256 pattern of bits, then we are able to represent all the characters that are on our keyboard.
So, these eight bits can, it's useful, representing our basic information, which is like, for example, the numeric characters of a alphabet and so on.
So, with these eight bits, what do they represent?
Actually, we do not know, only the computer notes.
It can represent instructions.
Instruction also appears in the form of a pattern of bits.
And how to interpret this pattern of bits?
Well, it is the job of the control unit of the CPU.
It is to decode what this means if it is to contain a piece of computer instruction.
Then, whole define the meaning of this piece of data if we were to represent instruction, the computer manufacturer.
If this pattern means adding two numbers together, the control unit will then add two numbers together.
This is the process of decoding, interpreting what it means.
But this byte can contain data also, meaning the byte information, which represent the alphabet that we typed on the keyboard.
It can represent the results of adding two numbers together.
Two plus two, that means this will be four.
Number four will be there.
If it is number four, then it will be represented by one zero zero, one zero zero, it's binary four.
Its patterns can also contain the address of a piece of data.
It can contain data, but it can be a dress because each piece of data in RAM needs to have an address.
Otherwise, when we do not know where to put the result to in the big space of RAM, we have 32 GB.
While we live in Australia, find me, give me the address without the address.
I'm not able to find you.
Let's store this data.
Unless you tell me the address of the location of the memory space, otherwise the CPU doesn't know where to put it to.
Now, here comes a very common term, something that we use very often.
And maybe something that we might forget, especially when we purchase a computer.
We would ask the salesman, what is the size of the CPU?
Even if we do not ask the salesman, when we purchase a computer, we need to read the specifications of this notebook or desktop computer.
It is a very important piece of information that will determine efficiency performance of the computer that we are going to have.
This one single factor will determine a lot of other things that influence the performance of a computer system.
32-bit CPU or 64-bit CPU.
Well, those were the days where you use 16-bit CPU, that means smallest.
Absolutely, absolutely.
16-bit CPU, we can find it in the museum.
Okay, today, it's either 32 or 64.
What does that mean?
The CPU 64, CPU means that the word size is 64.
What does that mean?
A 64-bit CPU means that at any single polling time, the CPU process 64 bits of information.
If it is 32-bit CPU, means the CPU can only process 32 bits at a time.
This number, we call it word size.
The RAM memory is primarily based on the concept bits.
Bits is too small.
Then we extend the concept to byte, which is 8 bits.
So we were to say 32 gigabytes of memory.
Well, 32 giga times 8, you know how many bits there.
The byte is a big basic unit.
Then the next stage of defining the size of memory is called word.
A word is the number of bytes that the CPU will take.
Every time we answer it to do some calculation processing of data.
So that means 32 word size CPU will fetch four bytes at any single polling time.
It when we answer to execute instructions.
Well, if it's 64, the CPU will take in 8 bytes of memory, memory of data, 8 times 64 bits.
So it will take in a lot more information at any single polling time.
That means the CPU does not have to go to intro.
Let's say if we were to use 32 bit CPU, it can only fetch 32 bit information.
So it needs to do two times to fetch 64 bit of information.
So it's the 64 bit CPU will cut short.
The amount of time by half as compared to 32 bit CPU.
The word size will also determine the maximum amount of RAM that a computer can use.
Well, we cannot have an unlimited amount of RAM space.
So if we were to have 64 bit CPU, then it will increase the amount of RAM space that it can have.
Because on the RAM, we need to assign an address to each of the bytes.
Without a mechanism of being able to give each of the bytes an address, we cannot do much.
That's why we tripping information from RAM or outputting information to the RAM,
because we do not know how to address each of the bytes.
So the word size will determine the amounts of RAM space that we can have.
But when we change it to increase it to 64 bit, then we can increase the amount of RAM space from 2 raised to power 32 to double that.
Well, of course, when we double that, then it will get very expensive.
But in terms of arithmetic, the arithmetic of addressing a particular byte, we have the arithmetic that enables us to address farther away within the computer memory.
Because if we have this magnet size of computer space, each of them must have an address.
How do we address that?
If we have 64 CPU of word size, that means the range of the address that we can have will double.
That means the amount of RAM space that we can have on the computer will be double.
Then what's so good about, well, that means the computer can run applications, many, many applications.
At anything called point in time, we have many of them sitting in the main memory.
It does not have to go out to the hard disk drive, coming into the main memory so that the CPU can execute this program.
It does not have to go to and fro between the main memory and how this storage.
That's why when we experience delay in getting our response, one of the reason is that we might not have, is because we might not have enough memory space.
So that the operating system, requiring the operating system to go out to D, I do not have enough space to stay there on the hard disk,
and wait until I got some space available on the main memory that you come in.
A bigger amount of space that we have on RAM will improve the efficiency, will improve performance.
Here is the concept, the main memory, each one of them must have an address.
So for example, address 125 is referring to that well.
It's a data, CPU have a data, or it's a piece of data, it's called series, which is zero, and to be written to 125, which is here.
So it's not just simply to be written anywhere, it must be in a particular spot as specified by the computer programmer.
And just that in the program that we say this is this location 125, but we cannot remember location, but we specify how this is, we call this name ABC.
ABC has the compiler will assign it on location 125, we call that the name ABC.
And we write a program, we just write, I'll put it to ABC instead of 125, but all this will be taken care of by the operating system and during the runtime period.
Now we get to understand the concept of address, a memory, data to be written to memory and so on.
Now the two types of main memory, one is the volatile RAM, that means once power is off everything, all the data here will disappear.
The two types of RAM also, one is called the static RAM has RAM, dynamic RAM.
What it says, that means that it is in terms of performance, we call that this time memory, which is more expensive, cash memory.
It pronounced just like the word C-A-A, C-A-S-H, cash.
And it does not consume a lot of power, that as compared to dynamic RAM, the RAM is the one that we talk often about when we purchase a computer.
Because it's enabled us to have purchased a huge amount of space that are continuing one memory chip.
And those data that we often refer to will be residing in cash memory.
For example, the directory of the database, the address of a worldwide web that we use very often.
So since we use it so often, we just might as well just put them in cash memory so that it can be quickly available to the CPU.
And the next non-volatile, that even when we switch the power off, the data will still be day memory, read only memory, which the CD, DVD, and so on.
Then another type of non-volatile storage device is the fresh memory.
Like those that we have, they're memory stick, CD card.
Now the contents can be erased.
And then using a type of technology called electronically, eraseable, programmable, read only memory device.
So memory card, when you see a memory card address, actually a ROM device, when you see a memory stick, it's just a ROM device.
But its contents can be erased.
But the way it is erased, it's done electronically.
So it looks as if it's just like a RAM, but actually it's ROM that because the memory, the data, it can be erased, but actually it's ROM type of memory device.
So it's just like, that's like if this is like the disk drive.
But this drive is mechanical.
We will be evolving at this, which will be spin, and then the latency time means that the delay is longer.
So how we group our data, ROM type is the next fundamental units.
We say this could be quite familiar to you, kilo.
The word kilo means in English means 1,000.
Now, kilo meter, the distance between Sydney and Melbourne will be 1,000 kilo meter, so it means kilo 1,000.
I say here about actually computing, it's not actually 1,000.
1,000 come from the metric system.
It means 1,000, 1,000 kilo meter.
1,000 kilo meter is 1,000 centimeter.
1,000 kilo meter means 1,000 meter.
And then maga is 1,000 times 1,000 closer to 1 meter.
Giga is 1,000 times 1,000.
Chara is 1,000 times gigabyte.
Today, we have storage that is of this dimension terabyte.
Well, Giga is what is expected.
This maga is just extremely too small for today's usage.
Even when we buy a memory stick, it's of this dimension of Giga.
Well, to be exact, why we use bytes?
Because we are able to store a symbol or number within epics, so kilo, within computing.
It's actually 1,000, 2,000.
1,000, 2,000 is 2 raised to 10.
What can you contain?
Maybe one page on information, maga.
Maybe one document or book is maga is 1,000, 2,000 times 1,000, 2,000.
Giga is 3 times 1, 0, 2, 4, times 1, 0, 2, 4, times 1, 0, 2, 4.
It is not really 1,000 times 1,000, 1,000.
Why it is all that?
All because of binary arithmetic.
Computer only can do 1 and 0.
So there's no decimal systems.
But just that for convenience, which is all about 1,000 to be exact, it's 1, 2, 1, 0, 2, 4.
So when we say this, how this is of 15 gigabyte, it means 15, 9,000, 1000, 1000.
But to be exact, it should be 15 times 1, 0, 2, 4, times 1, 0, 2, 4, times 1, 0, 2, 4.
But this is just more for convenience.
Now, we looked at how it is done when data or application is transferred.
In and out between secondary and storage device and RAM and so on.
So when we start the computer, then we load the operating system.
The operating system will be loaded onto memory.
Then we see the operating system is interacting with us,
which I have demonstrated to you with the use of the previous video.
So the BIOS get the bootstrapped loader onto the RAM first,
and then this bootstrapped loader loads the operating system onto RAM.
Then after that, the operating system should control.
This one, a browser, when we say we want to see a lecture university browser,
then the browser will be, the application will be loaded from the hard disk,
and then onto RAM.
Then after which, we see the browser interacting with us.
Next, maybe we want to load an application,
a pinch application, which is sitting on the hard disk,
and then get loaded onto RAM, and then you get displayed in front of us,
then we can draw pictures and so on and so forth with display photos.
When we exit an application,
that's one thing that this computer behaves differently.
When we do not want something on the computer,
when we don't want the paint application,
we do not need to put it back.
We just whatever memory space in RAM,
that's previously been occupied by the paint application will get overwritten.
Unless an application that we are running requires us to save the result.
If we no longer need an application,
we say exit, then whatever, previously,
that's been occupied by the application in this case, paint will just disappear.
We'll get overwritten by another application.
Another application comes in whichever space,
however big you get overwritten.
And then, because it's been overwritten, the paint application will disappear.
That's how it works.
Loading an application onto RAM is a must,
in order for it to be executed.
As you can see, the bigger amount of space that we have,
the more applications that we can have in it.
And then we do not need to go back to the hard disk
for it to be fetched onto the main memory.
So, in front of us, we can have 20 applications open,
and sitting in the RAM.
And then we just switch in between the different applications.
And we will not lose time in having an application to be loaded onto the RAM for execution.
So, RAM, dynamic RAM, S-RAM, DEMIS, here, cache memory.
And this is cache memory.
This memory RAM, which requires constantly to be re-energized.
This one, much less frequent.
And the much faster, more reliable, but more expensive.
This is our memory S-RAM static RAM.
We usually call it cache memory.
This is the one that we normally deal with.
It's a chip, but then it is still not chip,
as compared to this drive memory.
In terms of speed, CPU, memory, computer memory, CPU RAM.
So, cache memory is fast, but also get divided into different levels in terms of performance.
As you can see, it's not a must to have this, but be nice to have.
The CPU can directly access the data or instructions in the main memory.
But it would be nice to have this, which contains the data, instructions that we use so often.
That we can just have faster speed.
Here you are, because the information about a particular webpage.
When we open a database system, the directory, all there.
So, here you are, CPU, the data, address all here, all here.
And I can give it to you much quicker than if we were to put it here.
Well, in terms of speed, he is the comparison.
Remember register.
Register is also a story device.
They are very specialized story device.
It can contain a word information.
If a CPU is 32 bit, then the register will be of 32 bits.
Register will contain data that's been transferred from the memory and instruction for the CPU to execute.
The delay time, 90 seconds, 1 to 3.
What's nano? 10 raised to power minus 9 of a second.
So, the main one second is equal to 1000,000,000 nano seconds.
It has very limited capacity in terms of memory.
You will not be able to store a lot of data.
Those data are for CPU to add upon.
For example, instructions.
If it's 2 plus 3, 2 and 3 will be contained in the register.
Initially, 2 plus 2, the 2 and 3 will be in here.
Because 2 and 3 have been defined by a programmer.
And they get loaded onto the register.
So that the CPU knows what number am I supposed to add on?
Register A has 2.
Register B has 3.
Then we get the results.
CPU work in conjunction with the registers for computations and processing of data.
CPU does not work directly with computer memory RAM.
Whatever the instructions and data needs to be further transferred to the register.
Then cache memory depends on the cache level.
1 to 3, the latency time, delay, 2 to minus 12.
And you amount space that we can have is 1 to 8 megabyte.
It's expensive.
We cannot afford to have to allow this.
Then the main memory delay, 10 to 60 nano seconds.
Today we have all the way up to 128 gigabytes.
Most PC will have this.
To have this will be very expensive.
